// This file is auto-generated by @hey-api/openapi-ts

/**
 * CityAdd
 */
export type CityAdd = {
    /**
     * City Name
     */
    city_name: string;
    /**
     * Lat
     */
    lat: number | string | null;
    /**
     * Lon
     */
    lon: number | string | null;
    /**
     * Lat Min
     */
    lat_min: number | string | null;
    /**
     * Lat Max
     */
    lat_max: number | string | null;
    /**
     * Lon Min
     */
    lon_min: number | string | null;
    /**
     * Lon Max
     */
    lon_max: number | string | null;
    /**
     * Population
     */
    population: number | null;
    /**
     * Importance
     */
    importance: number | null;
    /**
     * Category
     */
    category: string;
    /**
     * State
     */
    state: string | null;
};

/**
 * CityIndexResponse
 */
export type CityIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * HealthCheck
 */
export type HealthCheck = {
    /**
     * Status
     */
    status?: string;
};

/**
 * LegalRoleIndexResponse
 */
export type LegalRoleIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
};

/**
 * OfferAdd
 */
export type OfferAdd = {
    /**
     * Raw Data
     */
    raw_data: string;
    /**
     * Author
     */
    author: string;
    /**
     * Author Uid
     */
    author_uid: string;
    /**
     * Offer Uid
     */
    offer_uid: string;
    /**
     * Timestamp
     */
    timestamp: string;
    source: SourceType;
};

/**
 * OfferIndexResponse
 */
export type OfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Author
     */
    author: string;
    /**
     * Description
     */
    description: string;
    /**
     * Email
     */
    email: string | null;
    /**
     * Url
     */
    url: string | null;
    place?: PlaceResponse | null;
    /**
     * Legal Roles
     */
    legal_roles: Array<RolesResponse>;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
};

/**
 * OfferStatus
 */
export type OfferStatus = 'new' | 'draft' | 'processed' | 'accepted' | 'rejected' | 'active';

/**
 * OfferUpdate
 */
export type OfferUpdate = {
    /**
     * Facility Uuid
     */
    facility_uuid?: string | null;
    /**
     * Facility Name
     */
    facility_name?: string | null;
    /**
     * City Uuid
     */
    city_uuid?: string | null;
    /**
     * City Name
     */
    city_name?: string | null;
    /**
     * Place Name
     */
    place_name?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Url
     */
    url?: string | null;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    /**
     * Price
     */
    price?: number | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Invoice
     */
    invoice?: boolean | null;
    /**
     * Visible
     */
    visible?: boolean | null;
    status?: OfferStatus | null;
    /**
     * Roles
     */
    roles?: Array<string> | null;
};

/**
 * OffersPaginated
 */
export type OffersPaginated = {
    /**
     * Data
     */
    data: Array<OfferIndexResponse>;
    /**
     * Count
     */
    count: number;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
};

/**
 * ParseResponse
 */
export type ParseResponse = {
    /**
     * Success
     */
    success: boolean;
    data?: SubstitutionOffer | null;
    /**
     * Error
     */
    error?: string | null;
    usage?: UsageDetails | null;
};

/**
 * PlaceAdd
 */
export type PlaceAdd = {
    category: PlaceCategory;
    /**
     * Type
     */
    type?: string | null;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Street
     */
    street?: string | null;
    /**
     * Postal Code
     */
    postal_code?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Epuap
     */
    epuap?: string | null;
    /**
     * Department
     */
    department?: string | null;
    /**
     * Lat
     */
    lat: number | string | null;
    /**
     * Lon
     */
    lon: number | string | null;
    /**
     * Website
     */
    website?: string | null;
};

/**
 * PlaceCategory
 */
export type PlaceCategory = 'prosecutor' | 'court' | 'police' | 'other';

/**
 * PlaceIndexResponse
 */
export type PlaceIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    category: PlaceCategory;
    /**
     * Name
     */
    name: string;
    /**
     * Street Name
     */
    street_name?: string | null;
    /**
     * Postal Code
     */
    postal_code?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Department
     */
    department?: string | null;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
    /**
     * Website
     */
    website?: string | null;
};

/**
 * PlaceResponse
 */
export type PlaceResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
};

/**
 * RawOfferIndexResponse
 */
export type RawOfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Author
     */
    author?: string | null;
    /**
     * Author Uid
     */
    author_uid: string;
    /**
     * Offer Uid
     */
    offer_uid: string;
    /**
     * Raw Data
     */
    raw_data: string;
    source: SourceType;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Email
     */
    email: string | null;
    /**
     * Url
     */
    url: string | null;
    place?: PlaceResponse | null;
    /**
     * Legal Roles
     */
    legal_roles: Array<RolesResponse>;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    status?: OfferStatus | null;
    /**
     * Added At
     */
    added_at: string;
};

/**
 * RawOffersPaginated
 */
export type RawOffersPaginated = {
    /**
     * Data
     */
    data: Array<RawOfferIndexResponse>;
    /**
     * Count
     */
    count: number;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
};

/**
 * RolesResponse
 */
export type RolesResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
};

/**
 * SourceType
 */
export type SourceType = 'bot' | 'user';

/**
 * SubstitutionOffer
 */
export type SubstitutionOffer = {
    /**
     * Location
     */
    location?: ('sÄ…d' | 'policja' | 'prokuratura') | null;
    /**
     * Location Full Name
     */
    location_full_name?: string | null;
    /**
     * Date
     */
    date?: Array<string> | null;
    /**
     * Time
     */
    time?: Array<string> | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Legal Roles
     */
    legal_roles?: Array<'adwokat' | 'radca prawny' | 'aplikant adwokacki' | 'aplikant radcowski'> | null;
    /**
     * Email
     */
    email?: string | null;
};

/**
 * UsageDetails
 */
export type UsageDetails = {
    /**
     * Prompt Tokens
     */
    prompt_tokens: number;
    /**
     * Completion Tokens
     */
    completion_tokens: number;
    /**
     * Total Tokens
     */
    total_tokens: number;
    /**
     * Elapsed Time
     */
    elapsed_time: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetAllRawOffersOffersRawGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Status
         */
        status?: OfferStatus | null;
        /**
         * Field
         */
        field?: 'name' | 'created_at';
        /**
         * Order
         */
        order?: 'asc' | 'desc';
    };
    url: '/offers/raw';
};

export type GetAllRawOffersOffersRawGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllRawOffersOffersRawGetError = GetAllRawOffersOffersRawGetErrors[keyof GetAllRawOffersOffersRawGetErrors];

export type GetAllRawOffersOffersRawGetResponses = {
    /**
     * Successful Response
     */
    200: RawOffersPaginated;
};

export type GetAllRawOffersOffersRawGetResponse = GetAllRawOffersOffersRawGetResponses[keyof GetAllRawOffersOffersRawGetResponses];

export type CreateRawOfferOffersRawPostData = {
    body: OfferAdd;
    path?: never;
    query?: never;
    url: '/offers/raw';
};

export type CreateRawOfferOffersRawPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRawOfferOffersRawPostError = CreateRawOfferOffersRawPostErrors[keyof CreateRawOfferOffersRawPostErrors];

export type CreateRawOfferOffersRawPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type UpdateOfferOffersOfferUuidPatchData = {
    body: OfferUpdate;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/{offer_uuid}';
};

export type UpdateOfferOffersOfferUuidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOfferOffersOfferUuidPatchError = UpdateOfferOffersOfferUuidPatchErrors[keyof UpdateOfferOffersOfferUuidPatchErrors];

export type UpdateOfferOffersOfferUuidPatchResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type UpdateOfferOffersOfferUuidPatchResponse = UpdateOfferOffersOfferUuidPatchResponses[keyof UpdateOfferOffersOfferUuidPatchResponses];

export type GetAllOffersOffersGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Field
         */
        field?: 'name' | 'created_at';
        /**
         * Order
         */
        order?: 'asc' | 'desc';
    };
    url: '/offers/';
};

export type GetAllOffersOffersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllOffersOffersGetError = GetAllOffersOffersGetErrors[keyof GetAllOffersOffersGetErrors];

export type GetAllOffersOffersGetResponses = {
    /**
     * Successful Response
     */
    200: OffersPaginated;
};

export type GetAllOffersOffersGetResponse = GetAllOffersOffersGetResponses[keyof GetAllOffersOffersGetResponses];

export type GetRawOfferOffersRawOfferUuidGetData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/raw/{offer_uuid}';
};

export type GetRawOfferOffersRawOfferUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRawOfferOffersRawOfferUuidGetError = GetRawOfferOffersRawOfferUuidGetErrors[keyof GetRawOfferOffersRawOfferUuidGetErrors];

export type GetRawOfferOffersRawOfferUuidGetResponses = {
    /**
     * Successful Response
     */
    200: RawOfferIndexResponse;
};

export type GetRawOfferOffersRawOfferUuidGetResponse = GetRawOfferOffersRawOfferUuidGetResponses[keyof GetRawOfferOffersRawOfferUuidGetResponses];

export type GetLegalRolesOffersLegalRolesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/offers/legal_roles';
};

export type GetLegalRolesOffersLegalRolesGetResponses = {
    /**
     * Response Get Legal Roles Offers Legal Roles Get
     * Successful Response
     */
    200: Array<LegalRoleIndexResponse>;
};

export type GetLegalRolesOffersLegalRolesGetResponse = GetLegalRolesOffersLegalRolesGetResponses[keyof GetLegalRolesOffersLegalRolesGetResponses];

export type ParseRawOffersParseOfferUuidGetData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/parse/{offer_uuid}';
};

export type ParseRawOffersParseOfferUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ParseRawOffersParseOfferUuidGetError = ParseRawOffersParseOfferUuidGetErrors[keyof ParseRawOffersParseOfferUuidGetErrors];

export type ParseRawOffersParseOfferUuidGetResponses = {
    /**
     * Successful Response
     */
    200: ParseResponse;
};

export type ParseRawOffersParseOfferUuidGetResponse = ParseRawOffersParseOfferUuidGetResponses[keyof ParseRawOffersParseOfferUuidGetResponses];

export type CreatePlacePlacesPostData = {
    body: PlaceAdd;
    path?: never;
    query?: never;
    url: '/places/';
};

export type CreatePlacePlacesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePlacePlacesPostError = CreatePlacePlacesPostErrors[keyof CreatePlacePlacesPostErrors];

export type CreatePlacePlacesPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateCityPlacesCityPostData = {
    body: CityAdd;
    path?: never;
    query?: never;
    url: '/places/city';
};

export type CreateCityPlacesCityPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCityPlacesCityPostError = CreateCityPlacesCityPostErrors[keyof CreateCityPlacesCityPostErrors];

export type CreateCityPlacesCityPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetFacilitiesPlacesFacilityPlaceNameGetData = {
    body?: never;
    path: {
        /**
         * Place Name
         */
        place_name: string;
    };
    query?: {
        /**
         * Place Type
         */
        place_type?: string | null;
    };
    url: '/places/facility/{place_name}';
};

export type GetFacilitiesPlacesFacilityPlaceNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFacilitiesPlacesFacilityPlaceNameGetError = GetFacilitiesPlacesFacilityPlaceNameGetErrors[keyof GetFacilitiesPlacesFacilityPlaceNameGetErrors];

export type GetFacilitiesPlacesFacilityPlaceNameGetResponses = {
    /**
     * Response Get Facilities Places Facility  Place Name  Get
     * Successful Response
     */
    200: Array<PlaceIndexResponse>;
};

export type GetFacilitiesPlacesFacilityPlaceNameGetResponse = GetFacilitiesPlacesFacilityPlaceNameGetResponses[keyof GetFacilitiesPlacesFacilityPlaceNameGetResponses];

export type GetCitiesPlacesCityCityNameGetData = {
    body?: never;
    path: {
        /**
         * City Name
         */
        city_name: string;
    };
    query?: never;
    url: '/places/city/{city_name}';
};

export type GetCitiesPlacesCityCityNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCitiesPlacesCityCityNameGetError = GetCitiesPlacesCityCityNameGetErrors[keyof GetCitiesPlacesCityCityNameGetErrors];

export type GetCitiesPlacesCityCityNameGetResponses = {
    /**
     * Response Get Cities Places City  City Name  Get
     * Successful Response
     */
    200: Array<CityIndexResponse>;
};

export type GetCitiesPlacesCityCityNameGetResponse = GetCitiesPlacesCityCityNameGetResponses[keyof GetCitiesPlacesCityCityNameGetResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Return HTTP Status Code 200 (OK)
     */
    200: HealthCheck;
};

export type HealthCheckHealthGetResponse = HealthCheckHealthGetResponses[keyof HealthCheckHealthGetResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:5000' | (string & {});
};