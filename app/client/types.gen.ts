// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_offer-import_raw_offers
 */
export type BodyOfferImportRawOffers = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * CityAdd
 */
export type CityAdd = {
    /**
     * City Name
     */
    city_name: string;
    /**
     * Lat
     */
    lat: number | string;
    /**
     * Lon
     */
    lon: number | string;
    /**
     * Lat Min
     */
    lat_min?: number | string | null;
    /**
     * Lat Max
     */
    lat_max?: number | string | null;
    /**
     * Lon Min
     */
    lon_min?: number | string | null;
    /**
     * Lon Max
     */
    lon_max?: number | string | null;
    /**
     * Population
     */
    population?: number | null;
    /**
     * Importance
     */
    importance?: number | null;
    /**
     * Category
     */
    category: string;
    /**
     * State
     */
    state?: string | null;
    /**
     * Voivodeship Name
     */
    voivodeship_name: string;
    /**
     * Voivodeship Iso
     */
    voivodeship_iso: string;
    /**
     * Teryt Simc
     */
    teryt_simc: string;
};

/**
 * CityIndexResponse
 */
export type CityIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
    /**
     * Voivodeship Name
     */
    voivodeship_name: string;
};

/**
 * CityResponse
 */
export type CityResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * HealthCheck
 */
export type HealthCheck = {
    /**
     * Status
     */
    status?: string;
};

/**
 * ImportResult
 */
export type ImportResult = {
    /**
     * Total Records
     */
    total_records: number;
    /**
     * Imported Records
     */
    imported_records: number;
    /**
     * Skipped Records
     */
    skipped_records: number;
    /**
     * Errors
     */
    errors: Array<string>;
};

/**
 * LegalRoleIndexResponse
 */
export type LegalRoleIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
};

/**
 * OfferAdd
 */
export type OfferAdd = {
    /**
     * Author
     */
    author: string;
    /**
     * Facility Uuid
     */
    facility_uuid?: string | null;
    /**
     * Facility Name
     */
    facility_name?: string | null;
    /**
     * City Uuid
     */
    city_uuid?: string | null;
    /**
     * City Name
     */
    city_name?: string | null;
    /**
     * Place Name
     */
    place_name?: string | null;
    /**
     * Email
     */
    email: string;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Invoice
     */
    invoice?: boolean | null;
    status?: OfferStatus | null;
    /**
     * Roles
     */
    roles?: Array<string> | null;
    source: SourceType;
};

/**
 * OfferIndexResponse
 */
export type OfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Author
     */
    author: string;
    /**
     * Place Name
     */
    place_name?: string | null;
    /**
     * Description
     */
    description: string;
    /**
     * Email
     */
    email: string | null;
    /**
     * Url
     */
    url: string | null;
    place?: PlaceResponse | null;
    city?: CityResponse | null;
    /**
     * Legal Roles
     */
    legal_roles: Array<RolesResponse>;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    /**
     * Valid To
     */
    valid_to?: string | null;
};

/**
 * OfferRawAdd
 */
export type OfferRawAdd = {
    /**
     * Raw Data
     */
    raw_data: string;
    /**
     * Author
     */
    author: string;
    /**
     * Author Uid
     */
    author_uid: string;
    /**
     * Offer Uid
     */
    offer_uid: string;
    /**
     * Timestamp
     */
    timestamp: string;
    source: SourceType;
};

/**
 * OfferStatus
 */
export type OfferStatus = 'imported' | 'new' | 'draft' | 'spam' | 'postponed' | 'accepted' | 'rejected' | 'active';

/**
 * OfferUpdate
 */
export type OfferUpdate = {
    /**
     * Facility Uuid
     */
    facility_uuid?: string | null;
    /**
     * Facility Name
     */
    facility_name?: string | null;
    /**
     * City Uuid
     */
    city_uuid?: string | null;
    /**
     * City Name
     */
    city_name?: string | null;
    /**
     * Place Name
     */
    place_name?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Url
     */
    url?: string | null;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    /**
     * Price
     */
    price?: number | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Invoice
     */
    invoice?: boolean | null;
    /**
     * Visible
     */
    visible?: boolean | null;
    status?: OfferStatus | null;
    /**
     * Roles
     */
    roles?: Array<string> | null;
    /**
     * Submit Email
     */
    submit_email?: boolean | null;
};

/**
 * OffersPaginated
 */
export type OffersPaginated = {
    /**
     * Data
     */
    data: Array<OfferIndexResponse>;
    /**
     * Count
     */
    count: number;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
};

/**
 * ParseResponse
 */
export type ParseResponse = {
    /**
     * Success
     */
    success: boolean;
    data?: SubstitutionOffer | null;
    /**
     * Error
     */
    error?: string | null;
    usage?: UsageDetails | null;
};

/**
 * PlaceAdd
 */
export type PlaceAdd = {
    category: PlaceCategory;
    /**
     * Type
     */
    type?: string | null;
    /**
     * Name
     */
    name: string;
    /**
     * Street
     */
    street?: string | null;
    /**
     * Street Name
     */
    street_name?: string | null;
    /**
     * Street Number
     */
    street_number?: string | null;
    /**
     * Postal Code
     */
    postal_code?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Epuap
     */
    epuap?: string | null;
    /**
     * Department
     */
    department?: string | null;
    /**
     * Lat
     */
    lat: number | string | null;
    /**
     * Lon
     */
    lon: number | string | null;
    /**
     * Website
     */
    website?: string | null;
};

/**
 * PlaceCategory
 */
export type PlaceCategory = 'prosecutor' | 'court' | 'police' | 'other';

/**
 * PlaceIndexResponse
 */
export type PlaceIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    category: PlaceCategory;
    /**
     * Name
     */
    name: string;
    /**
     * Street Name
     */
    street_name?: string | null;
    /**
     * Street Number
     */
    street_number?: string | null;
    /**
     * Postal Code
     */
    postal_code?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Department
     */
    department?: string | null;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
    /**
     * Website
     */
    website?: string | null;
};

/**
 * PlaceResponse
 */
export type PlaceResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
    /**
     * Lat
     */
    lat: string | null;
    /**
     * Lon
     */
    lon: string | null;
};

/**
 * RawOfferIndexResponse
 */
export type RawOfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Author
     */
    author?: string | null;
    /**
     * Author Uid
     */
    author_uid?: string | null;
    /**
     * Offer Uid
     */
    offer_uid: string;
    /**
     * Raw Data
     */
    raw_data?: string | null;
    source: SourceType;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Email
     */
    email: string | null;
    /**
     * Url
     */
    url: string | null;
    /**
     * Invoice
     */
    invoice?: boolean | null;
    place?: PlaceResponse | null;
    city?: CityResponse | null;
    /**
     * Place Name
     */
    place_name?: string | null;
    /**
     * Legal Roles
     */
    legal_roles: Array<RolesResponse>;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    status?: OfferStatus | null;
    /**
     * Added At
     */
    added_at: string;
};

/**
 * RawOffersPaginated
 */
export type RawOffersPaginated = {
    /**
     * Data
     */
    data: Array<RawOfferIndexResponse>;
    /**
     * Count
     */
    count: number;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
};

/**
 * RolesResponse
 */
export type RolesResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Name
     */
    name: string;
};

/**
 * SimilarOfferIndexResponse
 */
export type SimilarOfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Place Name
     */
    place_name?: string | null;
    status: OfferStatus;
    /**
     * Valid To
     */
    valid_to: string;
};

/**
 * SourceType
 */
export type SourceType = 'bot' | 'user';

/**
 * SubstitutionOffer
 */
export type SubstitutionOffer = {
    /**
     * Location
     */
    location?: 'sąd' | 'policja' | 'prokuratura' | null;
    /**
     * Location Full Name
     */
    location_full_name?: string | null;
    /**
     * Date
     */
    date?: Array<string> | null;
    /**
     * Time
     */
    time?: Array<string> | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Legal Roles
     */
    legal_roles?: Array<'adwokat' | 'radca prawny' | 'aplikant adwokacki' | 'aplikant radcowski'> | null;
    /**
     * Email
     */
    email?: string | null;
};

/**
 * UsageDetails
 */
export type UsageDetails = {
    /**
     * Input Tokens
     */
    input_tokens: number;
    /**
     * Output Tokens
     */
    output_tokens: number;
    /**
     * Total Tokens
     */
    total_tokens: number;
    /**
     * Elapsed Time
     */
    elapsed_time: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type OfferGetLegalRolesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/offers/legal_roles';
};

export type OfferGetLegalRolesResponses = {
    /**
     * Response Offer-Get Legal Roles
     * Successful Response
     */
    200: Array<LegalRoleIndexResponse>;
};

export type OfferGetLegalRolesResponse = OfferGetLegalRolesResponses[keyof OfferGetLegalRolesResponses];

export type OfferListOffersData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Field
         */
        field?: 'valid_to' | 'created_at';
        /**
         * Order
         */
        order?: 'asc' | 'desc';
        /**
         * Lat
         */
        lat?: number | null;
        /**
         * Lon
         */
        lon?: number | null;
        /**
         * Distance Km
         */
        distance_km?: number | null;
        /**
         * Legal Role Uuids
         */
        legal_role_uuids?: Array<string> | null;
        /**
         * Invoice
         */
        invoice?: boolean | null;
    };
    url: '/offers';
};

export type OfferListOffersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferListOffersError = OfferListOffersErrors[keyof OfferListOffersErrors];

export type OfferListOffersResponses = {
    /**
     * Successful Response
     */
    200: OffersPaginated;
};

export type OfferListOffersResponse = OfferListOffersResponses[keyof OfferListOffersResponses];

export type OfferCreateOfferData = {
    body: OfferAdd;
    path?: never;
    query?: never;
    url: '/offers';
};

export type OfferCreateOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferCreateOfferError = OfferCreateOfferErrors[keyof OfferCreateOfferErrors];

export type OfferCreateOfferResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type OfferGetOfferByIdData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/{offer_uuid}';
};

export type OfferGetOfferByIdErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferGetOfferByIdError = OfferGetOfferByIdErrors[keyof OfferGetOfferByIdErrors];

export type OfferGetOfferByIdResponses = {
    /**
     * Successful Response
     */
    200: OfferIndexResponse;
};

export type OfferGetOfferByIdResponse = OfferGetOfferByIdResponses[keyof OfferGetOfferByIdResponses];

export type OfferUpdateOfferData = {
    body: OfferUpdate;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/{offer_uuid}';
};

export type OfferUpdateOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferUpdateOfferError = OfferUpdateOfferErrors[keyof OfferUpdateOfferErrors];

export type OfferUpdateOfferResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type OfferUpdateOfferResponse = OfferUpdateOfferResponses[keyof OfferUpdateOfferResponses];

export type OfferGetSimilarOffersByUserData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/{offer_uuid}/similar';
};

export type OfferGetSimilarOffersByUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferGetSimilarOffersByUserError = OfferGetSimilarOffersByUserErrors[keyof OfferGetSimilarOffersByUserErrors];

export type OfferGetSimilarOffersByUserResponses = {
    /**
     * Response Offer-Get Similar Offers By User
     * Successful Response
     */
    200: Array<SimilarOfferIndexResponse>;
};

export type OfferGetSimilarOffersByUserResponse = OfferGetSimilarOffersByUserResponses[keyof OfferGetSimilarOffersByUserResponses];

export type OfferListRawOffersData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Status
         */
        status?: OfferStatus | null;
        /**
         * Field
         */
        field?: 'name' | 'created_at';
        /**
         * Order
         */
        order?: 'asc' | 'desc';
    };
    url: '/offers/raw';
};

export type OfferListRawOffersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferListRawOffersError = OfferListRawOffersErrors[keyof OfferListRawOffersErrors];

export type OfferListRawOffersResponses = {
    /**
     * Successful Response
     */
    200: RawOffersPaginated;
};

export type OfferListRawOffersResponse = OfferListRawOffersResponses[keyof OfferListRawOffersResponses];

export type OfferCreateRawOfferData = {
    body: OfferRawAdd;
    path?: never;
    query?: never;
    url: '/offers/raw';
};

export type OfferCreateRawOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferCreateRawOfferError = OfferCreateRawOfferErrors[keyof OfferCreateRawOfferErrors];

export type OfferCreateRawOfferResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type OfferImportRawOffersData = {
    body: BodyOfferImportRawOffers;
    path?: never;
    query?: never;
    url: '/offers/raw/import';
};

export type OfferImportRawOffersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferImportRawOffersError = OfferImportRawOffersErrors[keyof OfferImportRawOffersErrors];

export type OfferImportRawOffersResponses = {
    /**
     * Successful Response
     */
    200: ImportResult;
};

export type OfferImportRawOffersResponse = OfferImportRawOffersResponses[keyof OfferImportRawOffersResponses];

export type OfferGetRawOfferData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/raw/{offer_uuid}';
};

export type OfferGetRawOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferGetRawOfferError = OfferGetRawOfferErrors[keyof OfferGetRawOfferErrors];

export type OfferGetRawOfferResponses = {
    /**
     * Successful Response
     */
    200: RawOfferIndexResponse;
};

export type OfferGetRawOfferResponse = OfferGetRawOfferResponses[keyof OfferGetRawOfferResponses];

export type OfferParseRawOfferData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/raw/{offer_uuid}/parse';
};

export type OfferParseRawOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferParseRawOfferError = OfferParseRawOfferErrors[keyof OfferParseRawOfferErrors];

export type OfferParseRawOfferResponses = {
    /**
     * Successful Response
     */
    200: ParseResponse;
};

export type OfferParseRawOfferResponse = OfferParseRawOfferResponses[keyof OfferParseRawOfferResponses];

export type OfferAcceptOfferData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/raw/{offer_uuid}/accept';
};

export type OfferAcceptOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferAcceptOfferError = OfferAcceptOfferErrors[keyof OfferAcceptOfferErrors];

export type OfferAcceptOfferResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type OfferAcceptOfferResponse = OfferAcceptOfferResponses[keyof OfferAcceptOfferResponses];

export type OfferRejectOfferData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/raw/{offer_uuid}/reject';
};

export type OfferRejectOfferErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OfferRejectOfferError = OfferRejectOfferErrors[keyof OfferRejectOfferErrors];

export type OfferRejectOfferResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type OfferRejectOfferResponse = OfferRejectOfferResponses[keyof OfferRejectOfferResponses];

export type PlaceCreatePlaceData = {
    body: PlaceAdd;
    path?: never;
    query?: never;
    url: '/places/';
};

export type PlaceCreatePlaceErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlaceCreatePlaceError = PlaceCreatePlaceErrors[keyof PlaceCreatePlaceErrors];

export type PlaceCreatePlaceResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PlaceCreateCityData = {
    body: CityAdd;
    path?: never;
    query?: never;
    url: '/places/city';
};

export type PlaceCreateCityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlaceCreateCityError = PlaceCreateCityErrors[keyof PlaceCreateCityErrors];

export type PlaceCreateCityResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PlaceGetFacilitiesData = {
    body?: never;
    path: {
        /**
         * Place Name
         */
        place_name: string;
    };
    query?: {
        /**
         * Place Type
         */
        place_type?: string | null;
    };
    url: '/places/facility/{place_name}';
};

export type PlaceGetFacilitiesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlaceGetFacilitiesError = PlaceGetFacilitiesErrors[keyof PlaceGetFacilitiesErrors];

export type PlaceGetFacilitiesResponses = {
    /**
     * Response Place-Get Facilities
     * Successful Response
     */
    200: Array<PlaceIndexResponse>;
};

export type PlaceGetFacilitiesResponse = PlaceGetFacilitiesResponses[keyof PlaceGetFacilitiesResponses];

export type PlaceGetFacilityData = {
    body?: never;
    path: {
        /**
         * Place Uuid
         */
        place_uuid: string;
    };
    query?: never;
    url: '/places/facility/uuid/{place_uuid}';
};

export type PlaceGetFacilityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlaceGetFacilityError = PlaceGetFacilityErrors[keyof PlaceGetFacilityErrors];

export type PlaceGetFacilityResponses = {
    /**
     * Successful Response
     */
    200: PlaceIndexResponse;
};

export type PlaceGetFacilityResponse = PlaceGetFacilityResponses[keyof PlaceGetFacilityResponses];

export type PlaceGetCityData = {
    body?: never;
    path: {
        /**
         * City Uuid
         */
        city_uuid: string;
    };
    query?: never;
    url: '/places/city/uuid/{city_uuid}';
};

export type PlaceGetCityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlaceGetCityError = PlaceGetCityErrors[keyof PlaceGetCityErrors];

export type PlaceGetCityResponses = {
    /**
     * Successful Response
     */
    200: CityIndexResponse;
};

export type PlaceGetCityResponse = PlaceGetCityResponses[keyof PlaceGetCityResponses];

export type PlaceGetCitiesData = {
    body?: never;
    path: {
        /**
         * City Name
         */
        city_name: string;
    };
    query?: never;
    url: '/places/city/{city_name}';
};

export type PlaceGetCitiesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlaceGetCitiesError = PlaceGetCitiesErrors[keyof PlaceGetCitiesErrors];

export type PlaceGetCitiesResponses = {
    /**
     * Response Place-Get Cities
     * Successful Response
     */
    200: Array<CityIndexResponse>;
};

export type PlaceGetCitiesResponse = PlaceGetCitiesResponses[keyof PlaceGetCitiesResponses];

export type DefaultReadRootData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type DefaultReadRootResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DefaultSreadRootData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/s';
};

export type DefaultSreadRootResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthcheckHealthCheckData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthcheckHealthCheckResponses = {
    /**
     * Return HTTP Status Code 200 (OK)
     */
    200: HealthCheck;
};

export type HealthcheckHealthCheckResponse = HealthcheckHealthCheckResponses[keyof HealthcheckHealthCheckResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:5000' | (string & {});
};
