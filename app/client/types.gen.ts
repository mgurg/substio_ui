// This file is auto-generated by @hey-api/openapi-ts

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * HealthCheck
 */
export type HealthCheck = {
    /**
     * Status
     */
    status?: string;
};

/**
 * OfferAdd
 */
export type OfferAdd = {
    /**
     * Raw Data
     */
    raw_data: string;
    /**
     * Author
     */
    author: string;
    /**
     * Author Uid
     */
    author_uid: string;
    /**
     * Offer Uid
     */
    offer_uid: string;
    /**
     * Timestamp
     */
    timestamp: string;
    source: SourceType;
};

/**
 * OfferIndexResponse
 */
export type OfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
};

/**
 * OfferStatus
 */
export type OfferStatus = 'new' | 'draft' | 'processed' | 'accepted' | 'rejected' | 'active';

/**
 * OfferUpdate
 */
export type OfferUpdate = {
    /**
     * Place Uuid
     */
    place_uuid?: string | null;
    /**
     * Place Name
     */
    place_name?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Url
     */
    url?: string | null;
    /**
     * Date
     */
    date?: string | null;
    /**
     * Hour
     */
    hour?: string | null;
    /**
     * Price
     */
    price?: number | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Invoice
     */
    invoice?: boolean | null;
    /**
     * Visible
     */
    visible?: boolean | null;
    status?: OfferStatus | null;
    /**
     * Legal Roles
     */
    legal_roles?: Array<string> | null;
};

/**
 * OffersPaginated
 */
export type OffersPaginated = {
    /**
     * Data
     */
    data: Array<OfferIndexResponse>;
    /**
     * Count
     */
    count: number;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
};

/**
 * RawOfferIndexResponse
 */
export type RawOfferIndexResponse = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Author
     */
    author: string;
    /**
     * Author Uid
     */
    author_uid: string;
    /**
     * Offer Uid
     */
    offer_uid: string;
    /**
     * Raw Data
     */
    raw_data: string;
    source: SourceType;
    /**
     * Added At
     */
    added_at: string;
};

/**
 * RawOffersPaginated
 */
export type RawOffersPaginated = {
    /**
     * Data
     */
    data: Array<RawOfferIndexResponse>;
    /**
     * Count
     */
    count: number;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
};

/**
 * SourceType
 */
export type SourceType = 'bot' | 'user';

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ReadRawOffersRawGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Status
         */
        status?: OfferStatus | null;
        /**
         * Field
         */
        field?: 'name' | 'created_at';
        /**
         * Order
         */
        order?: 'asc' | 'desc';
    };
    url: '/offers/raw';
};

export type ReadRawOffersRawGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadRawOffersRawGetError = ReadRawOffersRawGetErrors[keyof ReadRawOffersRawGetErrors];

export type ReadRawOffersRawGetResponses = {
    /**
     * Successful Response
     */
    200: RawOffersPaginated;
};

export type ReadRawOffersRawGetResponse = ReadRawOffersRawGetResponses[keyof ReadRawOffersRawGetResponses];

export type CreateRawOffersRawPostData = {
    body: OfferAdd;
    path?: never;
    query?: never;
    url: '/offers/raw';
};

export type CreateRawOffersRawPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRawOffersRawPostError = CreateRawOffersRawPostErrors[keyof CreateRawOffersRawPostErrors];

export type CreateRawOffersRawPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type ParseRawOffersParseOfferUuidGetData = {
    body?: never;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/parse/{offer_uuid}';
};

export type ParseRawOffersParseOfferUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ParseRawOffersParseOfferUuidGetError = ParseRawOffersParseOfferUuidGetErrors[keyof ParseRawOffersParseOfferUuidGetErrors];

export type ParseRawOffersParseOfferUuidGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateOffersParseOfferUuidPatchData = {
    body: OfferUpdate;
    path: {
        /**
         * Offer Uuid
         */
        offer_uuid: string;
    };
    query?: never;
    url: '/offers/parse/{offer_uuid}';
};

export type UpdateOffersParseOfferUuidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOffersParseOfferUuidPatchError = UpdateOffersParseOfferUuidPatchErrors[keyof UpdateOffersParseOfferUuidPatchErrors];

export type UpdateOffersParseOfferUuidPatchResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type UpdateOffersParseOfferUuidPatchResponse = UpdateOffersParseOfferUuidPatchResponses[keyof UpdateOffersParseOfferUuidPatchResponses];

export type ReadOffersGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Field
         */
        field?: 'name' | 'created_at';
        /**
         * Order
         */
        order?: 'asc' | 'desc';
    };
    url: '/offers/';
};

export type ReadOffersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadOffersGetError = ReadOffersGetErrors[keyof ReadOffersGetErrors];

export type ReadOffersGetResponses = {
    /**
     * Successful Response
     */
    200: OffersPaginated;
};

export type ReadOffersGetResponse = ReadOffersGetResponses[keyof ReadOffersGetResponses];

export type ItemGetOnePlacesPlaceUuidGetData = {
    body?: never;
    path: {
        /**
         * Place Uuid
         */
        place_uuid: string;
    };
    query?: never;
    url: '/places/{place_uuid}';
};

export type ItemGetOnePlacesPlaceUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ItemGetOnePlacesPlaceUuidGetError = ItemGetOnePlacesPlaceUuidGetErrors[keyof ItemGetOnePlacesPlaceUuidGetErrors];

export type ItemGetOnePlacesPlaceUuidGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Return HTTP Status Code 200 (OK)
     */
    200: HealthCheck;
};

export type HealthCheckHealthGetResponse = HealthCheckHealthGetResponses[keyof HealthCheckHealthGetResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:5000' | (string & {});
};